Summary
Build Kubernetes environment with most smallest vSphere and build Backup environment

Less impact to already exist vSphere environment and consume less vSphere resource
By setting up a loadbalancer environment, you can access without port forwarding and improve the portability of the deployment used in the public cloud.
By using the vSphere CSI driver, you can also experience using the Disk object called FCD supported from vSphere 6.7 U3.


What consists of this script
Container environment
   Kubernetes 1.21.06/containerd.io 1.4.11 (1node)
    CNI: Metallb
    CSI: Hostpath-CSI/NFS-CSI/vSphere-CSI

Additional Environment
    Minio Object Storage
    NFS Server for NFS-CSI
    Docker Registry for Airgap image
    
--------
Requirement
vSphere
  vSphere 6.7U3 (1vCenter and at least 1 ESXi Server and datastore. Any datastore will do)
  VM Resource 4vCPU 8-16GB RAM 100GB HDD minimum
  vSphere Cluster and vSAN is option. (It is not mandatory)
  There is no special setting. (Script will create storage policy for vSphere CSI driver)

Network
  Internet connection
  1 network segment
    for Ubuntu VM
      ex. 192.168.133.83
    for Loadbalancer
       ex. 192.168.133.208/28
Standard vSwitch and port group will worked. (any switch will work!)

VM Configuration
 OS: Ubuntu Server 20.04.3 x 1
 VM configuration
   CPU:  4vCPU above 
   RAM: 8GB above
   HDD: 100GB above (At least 50GB)
   Advanced Configuration: Set "disk.enableUUID=true"  (It is very imoortant!!!)

Ubuntu Install
  There is no special setting. 
    But I recommend to 
       use xfs.
       IP address will be work with DHCP and Static IP address.
       install only OpenSSH server. (No distribution's docker package)

-----
Script execution
1. be root user
sudo -i

2. Clone script file
git clone https://github.com/masezou/k8s-study-vanilla
cd k8s-study-vanilla

3. Edit Script file
    vi 3-configk8s.sh
         Change  IPRANGE="192.168.133.208/28" to your subnet.
         
   vi 5-csi-vsphere.sh
       #For vSphere CSI/Tanzu
       VSPHEREUSERNAME="administrator@vsphere.local"
       VSPHEREPASSWORD="PASSWORD"
       VSPHERESERVER="YOUR_vCENTER_FQDN"
       VSPHERESERVERIP="YOUR_vCENTE_IP"
       VSPPHEREDATASTORE="YOUR_DATASTORE"

   vi K3-kasten-vsphere.sh
      VSPHEREUSERNAME="administrator@vsphere.local"
      VSPHEREPASSWORD="PASSWORD"
      VSPHERESERVER="YOUR_VCENTER_FQDN"

 4. Execute script for building Kubernetes
 ./0-minio.sh ; ./1-tools.sh ; ./2-buildk8s-lnx.sh ; ./3-configk8s.sh ; ./4-csi-storage.sh

 5. Verify for Kubernetes
  kubectl get nodes
    1 node only appeared
   kubectl get pod -A
    All pod is running exclude  csi-nfs-controller. ( csi-nfs-controller will be Pending. but it is ok and it will work)
  kubectl get svc -A
   You can see dashboard-service-lb has Loadbalancer IP address. You can access Kubernetes Dashboard.
  kubectl get sc
   You can see csi-hostpath-sc (default) and nfs-csi
   
6. Install vSphere CSI Driver
./5-csi-vsphere.sh

7. Verify for vSphere CSI Driver
  kubectl get sc
   You can see csi-hostpath-sc, nfs-csi, vsphere-sc(default)
   Also you can create pvc with yaml. or execute ./P-wordpress.sh

   Trouble Shooting
       Check Storage Policy in vCenter.
         k8s-policy will be created and the policy point to datastore
       ls -l /dev/disk/by-id/wwn-*
         If there is no device, you may forget to set DISKUUID

---
How to use demo script
vi P-Wordpress.sh

Change following
NAMESPACE=wordpress-sample
SC=vsphere-sc
 
---
Building Backup Environment.
1. Install Kasten
./K0-kasten-tools.sh ; ./K1-kasten.sh
kubectl -n kasten-io get pod
Wait untill all pod is running. then
./K2-kasten-storage.sh ; ./K3-kasten-vsphere.sh

kubectl -n kasten-io get svc | grep gateway-ext
You can see loadbalancer assigned IP address. the access
http://<The IP Address>/k10/

How to get login token.
cat k10-k10.token

